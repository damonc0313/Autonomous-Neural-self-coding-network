name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  id-token: write    # for Codecov

jobs:
  lint:
    name: üìù Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install formatting & lint tools
        run: |
          pip install --upgrade pip
          pip install black isort flake8

      - name: Check formatting (black / isort)
        run: |
          black . --check
          isort . --check-only

      - name: Lint Python code
        run: |
          flake8 . \
            --exclude=.github,docs,logs \
            --select=E9,F63,F7,F82 \
            --show-source --statistics

  security:
    name: üîí Security Scans
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-security-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-security-

      - name: Install security tools
        run: |
          pip install --upgrade pip
          pip install bandit safety

      - name: Bandit scan
        run: |
          bandit -r . --exclude .github,docs,logs --exit-zero --severity-level MEDIUM

      - name: Safety audit
        run: |
          safety check --full-report || true

  test:
    name: ‚úÖ Test & Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-test-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-test-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "No requirements.txt"; fi
          pip install pytest pytest-cov

      - name: Run pytest
        run: |
          pytest --cov=. --cov-report=xml --maxfail=1 --disable-warnings -q

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
